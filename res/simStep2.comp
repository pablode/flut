#extension GL_ARB_bindless_texture: require

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(binding = 0) restrict buffer counters
{
  uint globalParticleCount;
};

layout(location = 0, r32ui, bindless_image) uniform restrict uimage3D grid;

shared uint localParticleCount;
shared uint globalParticleBaseOffset;

void main()
{
  const ivec3 voxelId = ivec3(gl_GlobalInvocationID);

  if (any(greaterThanEqual(voxelId, GRID_RES)))
  {
    return;
  }

  if (gl_LocalInvocationIndex == 0)
  {
    localParticleCount = 0;
  }

  barrier();

  const uint voxelParticleCount = imageLoad(grid, voxelId).x;

  const uint localParticleOffset = atomicAdd(localParticleCount, voxelParticleCount);

  barrier();

  if (gl_LocalInvocationIndex == 0)
  {
    globalParticleBaseOffset = atomicAdd(globalParticleCount, localParticleCount);
  }

  barrier();

  const uint globalParticleOffset = globalParticleBaseOffset + localParticleOffset;

  imageStore(grid, voxelId, uvec4(globalParticleOffset << 8));
}
